# syntax = docker/dockerfile:1.0-experimental

# This Dockerfile was generated by [dockerize](https://hex.pm/packages/dockerize)
# at 2020-07-01 08:07:23

# with `mix dockerize.init --force --path test_projects/simple_app --app my_simple_app`


# It leverages multi-stage-building of docker to build as fast as possible.
# How stages work together: https://user-images.githubusercontent.com/43009/84713978-e59a2700-af9e-11ea-9bbd-9dcf28d23da7.png

# -----------------------------------
# - stage: install
# - job: dependencies
# -----------------------------------

# see: https://github.com/qhwa/docker-elixir-builder
FROM qhwa/elixir-builder:latest AS deps

ARG MIX_ENV=prod
ARG HEX_MIRROR_URL=https://repo.hex.pm

WORKDIR /src

COPY config /src/config
COPY mix.exs mix.lock /src/

RUN mix deps.get --only $MIX_ENV

# -----------------------------------
# - stage: build
# - job: compile_deps
# -----------------------------------
FROM deps AS compile_deps
WORKDIR /src

ARG MIX_ENV=prod
ARG APPSIGNAL_HTTP_PROXY

RUN mix deps.compile


# -----------------------------------
# - stage: build
# - job: compile_app
# -----------------------------------
FROM compile_deps AS compile_app
WORKDIR /src

ARG MIX_ENV=prod

COPY lib/ ./lib


# You may add other directories crucial for compiling, for example:
# COPY priv/ ./priv


RUN mix compile



# -----------------------------------
# - stage: release
# - job: mix_release
# -----------------------------------
FROM compile_app AS mix_release

WORKDIR /src

ARG MIX_ENV=prod



RUN mix release --path /app --quiet

# -----------------------------------
# - stage: release
# - job: release_image
# -----------------------------------

# See: https://github.com/qhwa/docker-elixir-runner
FROM qhwa/elixir-runner:latest AS release_image

ARG APP_REVISION=latest
ARG MIX_ENV=prod

RUN chown nobody:nobody /app

USER nobody

COPY --from=mix_release --chown=nobody:nobody /app /app

ENTRYPOINT ["/app/bin/my_simple_app"]
CMD ["start"]
